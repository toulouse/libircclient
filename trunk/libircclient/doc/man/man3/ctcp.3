.TH "CTCP requests and replies." 3 "12 Sep 2004" "Version 0.1" "libirc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CTCP requests and replies. \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBirc_cmd_ctcp_request\fP (\fBirc_session_t\fP *session, const char *nick, const char *request)"
.br
.RI "\fIGenerates a CTCP request. \fP"
.ti -1c
.RI "int \fBirc_cmd_ctcp_reply\fP (\fBirc_session_t\fP *session, const char *nick, const char *reply)"
.br
.RI "\fIGenerates a reply to the CTCP request. \fP"
.ti -1c
.RI "void \fBirc_event_ctcp_internal\fP (\fBirc_session_t\fP *session, const char *event, const char *origin, const char **params, unsigned int count)"
.br
.RI "\fIGenerates an automatic reply to the CTCP request. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int irc_cmd_ctcp_reply (\fBirc_session_t\fP * session, const char * nick, const char * reply)"
.PP
Generates a reply to the CTCP request. 
.PP
\fBParameters:\fP
.RS 4
\fIsession\fP An initiated and connected session. 
.br
\fInick\fP A target nick to send request to. Must not be NULL. 
.br
\fIreply\fP A reply string. Must not be NULL.
.RE
.PP
\fBReturns:\fP
.RS 4
Return code 0 means success. Other value means error, the error code may be obtained through \fBirc_errno()\fP. Any error, generated by the IRC server, is available through event_numeric.
.RE
.PP
This function is used to send a reply to the CTCP request, if you choose not to use internal CTCP reply function, \fBirc_event_ctcp_internal()\fP. 
.SS "int irc_cmd_ctcp_request (\fBirc_session_t\fP * session, const char * nick, const char * request)"
.PP
Generates a CTCP request. 
.PP
\fBParameters:\fP
.RS 4
\fIsession\fP An initiated and connected session. 
.br
\fInick\fP A target nick to send request to. Must not be NULL. 
.br
\fIrequest\fP A request string. Must not be NULL.
.RE
.PP
\fBReturns:\fP
.RS 4
Return code 0 means success. Other value means error, the error code may be obtained through \fBirc_errno()\fP. Any error, generated by the IRC server, is available through ::event_numeric.
.RE
.PP
This function is used to send a CTCP request. There are four CTCP requests supported by Mirc: VERSION - get the client software name and version FINGER - get the client username, host and real name. PING - get the client delay. TIME - get the client local time.
.PP
A reply to the CTCP request will be sent by the ::event_ctcp_rep callback; be sure to define it.
.PP
\fBSee also:\fP
.RS 4
event_ctcp_rep event_numeric 
.RE
.PP

.SS "void irc_event_ctcp_internal (\fBirc_session_t\fP * session, const char * event, const char * origin, const char ** params, unsigned int count)"
.PP
Generates an automatic reply to the CTCP request. 
.PP
\fBParameters:\fP
.RS 4
\fIsession\fP An initiated and connected session. 
.br
\fIevent\fP An event name. 
.br
\fIorigin\fP An event origin. 
.br
\fIparams\fP event params. 
.br
\fIcount\fP event params count.
.RE
.PP
This function generates automatic CTCP reply to remote CTCP requests. It may be either called directly from the event_ctcp_rep callback, or may be specified AS ::event_ctcp_rep callback to simplify the code when adding CTCP functionality to your bot. 
